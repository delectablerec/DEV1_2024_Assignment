@model DEV1_2024_Assignment.ViewModels.IndexViewModel

<div class="container content-container">
    <!-- Filter Section -->
    <div class="dropdown mb-4">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterDropdownButton"
            data-bs-toggle="dropdown" aria-expanded="false">
            Filters
        </button>
        <div class="dropdown-menu p-4" aria-labelledby="filterDropdownButton">
            <form method="get" action="@Url.Action("Index", "Products")">
                <div class="mb-3">
                    <label for="minPrice" class="form-label">Min Price</label>
                    <input type="number" class="form-control" id="minPrice" name="minPrice" value="@Model.MinPrice">
                </div>
                <div class="mb-3">
                    <label for="maxPrice" class="form-label">Max Price</label>
                    <input type="number" class="form-control" id="maxPrice" name="maxPrice" value="@Model.MaxPrice">
                </div>
                <button type="submit" class="btn btn-outline-secondary">Apply Filters</button>
            </form>
        </div>
    </div>

    @if (Model.Products.Count != 0)
    {
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text"><strong>Price:</strong> â‚¬ @product.Price.ToString()</p>
                            <p class="card-text"><strong>Stock: </strong> 
                            @product.Stock.ToString()

                            @if (product.Stock <= 5)
                                        {
                                            <p class="my-3 text-warning ">Running out</p>
                                        }
                                        else if (product.Stock == 0)
                                        {
                                            <p class="my-3 text-danger ">Out of stock</p>
                                        }
                                        else{
                                            <p class="my-3 text-success ">Available</p>
                                        }

                            </p>
                            <div class="col d-flex flex-column justify-content-center align-content-center">
                                <form method="post" action="@Url.Action("AddToCart", "Products")">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <button type="submit" class="btn btn-outline-secondary mb-2 w-100"
                                        style="height: fit-content">
                                        <i class="bi bi-cart-plus"></i> Add to Cart
                                    </button>
                                </form>
                                <a href="@Url.Action("Details", "Products", new { productId = product.Id })"
                                    class="btn btn-outline-secondary w-100">
                                    <i class="bi bi-info-circle"></i> Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div>No Products Found</div>
    }
</div>
<div class="d-flex justify-content-center my-4">
    <form method="get">
        <!-- Preserve filter parameters -->
        <input type="hidden" name="minPrezzo" value="@Model.MinPrice" />
        <input type="hidden" name="maxPrezzo" value="@Model.MaxPrice" />
        <div class="btn-group">
            @for (int i = 1; i <= Model.PageNumber; i++)
            {
                <button type="submit" class"btn btn-dark name="PageIndex" value="@i">@i</button>
            }
        </div>
    </form>
</div>

<!-- Include Bootstrap JS if not already included -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
